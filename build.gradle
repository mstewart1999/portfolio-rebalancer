plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'com.gluonhq.gluonfx-gradle-plugin' version '1.0.14'
    id 'jacoco'
    id 'com.palantir.git-version' version "0.15.0"
}

repositories {
    mavenCentral()
    maven {
        url 'https://nexus.gluonhq.com/nexus/content/repositories/releases'
    }
}

def GV = gitVersion()
version "0.1.0-${GV}"
mainClassName = 'com.pbalancer.client.Main'

task createVersionProperties() {
    doLast {
        def buildNbr = 'git rev-list --count HEAD'.execute([], projectDir).text.trim();

        def details = versionDetails()
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['buildNbr'] = buildNbr
            p['version'] = project.version.toString()
            p['groupId'] = project.group
            p['artifactId'] = project.name
            p['buildDate'] = new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
            p['gitLastTag'] = details.lastTag
            p['gitCommitDistance'] = details.commitDistance.toString()
            p['gitHash'] = details.gitHash.toString()
            p['gitHashFull'] = details.gitHashFull.toString() // full 40-character Git commit hash
            p['gitBranchName'] = details.branchName // is null if the repository in detached HEAD mode
            p['gitIsCleanTag'] = details.isCleanTag.toString()
            p.store(w, null)
        }
        // copy needed, otherwise the bean VersionController can't load the file at startup when running complete-app tests.
        copy {
            from "$buildDir/resources/main/version.properties"
            into "bin/main/"
        }
    }
}

classes.dependsOn printVersion
classes.dependsOn createVersionProperties
createVersionProperties.mustRunAfter(processResources)


test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}


dependencies {
    implementation 'com.gluonhq:charm-glisten:6.1.1'
      // https://jmaven.com/maven/org.controlsfx/controlsfx 
    implementation 'org.controlsfx:controlsfx:11.1.1'
    implementation 'net.objecthunter:exp4j:0.4.8'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.slf4j:slf4j-jdk14:1.7.36'
    
    implementation 'org.glassfish.jersey.core:jersey-client:3.1.0-M3'
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:3.1.0-M3'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:3.1.0-M3'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

javafx {
    //version = '17.0.0.1'
    version = '18'
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.web' ]
}

gluonfx {
    // https://github.com/gluonhq/gluonfx-gradle-plugin#configuration
    //graalvmHome = "C:/tools/graalvm-ce-java17-22.0.0.2"
    // target = 'ios' // Uncomment to enable iOS
    // target = 'android' // Uncomment to enable Android
    target = 'host'
    
    //nativeImageArgs
    compilerArgs = ['--enable-url-protocols=ftp']
    
    resourcesList = [ '.*\\\\.properties$', '.*\\\\.csv$', '.*\\\\.psv$', '.*\\\\.css$', '.*\\\\.fxml$', '.*\\\\.png$']
    reflectionList = [
        'javafx.scene.control.Button',                  
        'javafx.scene.control.ButtonBar',               
        'javafx.scene.control.CheckBox',                
        'javafx.scene.control.ComboBox',                
        'javafx.scene.control.Control',                 
        'javafx.scene.control.Hyperlink',               
        'javafx.scene.control.Label',                   
        'javafx.scene.control.Labeled',                 
        'javafx.scene.control.PopupControl',            
        'javafx.scene.control.RadioButton',             
        'javafx.scene.control.ScrollPane',              
        'javafx.scene.control.Slider',                  
        'javafx.scene.control.Tab',                     
        'javafx.scene.control.TabPane',                 
        'javafx.scene.control.TableColumn',             
        'javafx.scene.control.TableView',               
        'javafx.scene.control.TextArea',                
        'javafx.scene.control.TextField',               
        'javafx.scene.control.TextInputControl',        
        'javafx.scene.control.TitledPane',              
        'javafx.scene.control.ToggleButton',            
        'javafx.scene.control.Tooltip',                 
        'javafx.scene.control.TreeTableColumn',         
        'javafx.scene.control.TreeTableView',           
        'javafx.scene.control.skin.TableColumnHeader',  
        'javafx.scene.layout.AnchorPane',               
        'javafx.scene.layout.BorderPane',               
        'javafx.scene.layout.ColumnConstraints',        
        'javafx.scene.layout.FlowPane',                 
        'javafx.scene.layout.GridPane',                 
        'javafx.scene.layout.HBox',                     
        'javafx.scene.layout.Pane',                     
        'javafx.scene.layout.Priority',                 
        'javafx.scene.layout.Region',                   
        'javafx.scene.layout.RowConstraints',           
        'javafx.scene.layout.VBox',                     
        
        'org.controlsfx.control.ToggleSwitch',

      'com.pbalancer.client.App',
      'com.pbalancer.client.controllers.BaseController',
      'com.pbalancer.client.controllers.AboutController',
      'com.pbalancer.client.controllers.AccountEditController',
      'com.pbalancer.client.controllers.AccountListController',
      'com.pbalancer.client.controllers.ActualAAController',
      'com.pbalancer.client.controllers.AssetAddController',
      'com.pbalancer.client.controllers.AssetEditKnownController',
      'com.pbalancer.client.controllers.AssetEditManualController',
      'com.pbalancer.client.controllers.AssetEditProxyController',
      'com.pbalancer.client.controllers.InvestSuggestionsPromptController',
      'com.pbalancer.client.controllers.InvestSuggestionsResultsController',
      'com.pbalancer.client.controllers.PortfolioController',
      'com.pbalancer.client.controllers.PortfolioListController',
      'com.pbalancer.client.controllers.PreferredAssetEditController',
      'com.pbalancer.client.controllers.PreferredAssetsController',
      'com.pbalancer.client.controllers.RebalanceSuggestionsController',
      'com.pbalancer.client.controllers.SettingsController',
      'com.pbalancer.client.controllers.TargetAAController',
      'com.pbalancer.client.controllers.TickerSuggestionProvider',
      'com.pbalancer.client.controllers.WebViewController',
      'com.pbalancer.client.controllers.WithdrawalSuggestionsPromptController',
      'com.pbalancer.client.controllers.WithdrawalSuggestionsResultsController',
      
      'com.pbalancer.client.model.Profile',
      'com.pbalancer.client.model.ProfileSettings',
      'com.pbalancer.client.model.Portfolio',
      'com.pbalancer.client.model.Account',
      'com.pbalancer.client.model.Asset',
      'com.pbalancer.client.model.aa.PreferredAsset',
      
      'com.pbalancer.client.model.AssetProxy',
      'com.pbalancer.client.model.aa.AssetAllocation',
      'com.pbalancer.client.model.aa.AANode',
      'com.pbalancer.client.model.rebalance.ActualAANode',
      
      'com.pbalancer.client.service.login.Credentials',
      'com.pbalancer.client.service.login.LoginResponse',
      'com.pbalancer.client.model.PriceResult'
    ]
    
    runtimeArgs = [
      '-Djavafx.platform=desktop',
      //'--module-path c:/tools/javafx-sdk-17.0.2/lib ',
      '--add-modules javafx.controls,javafx.fxml,javafx.web',

      '--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=org.controlsfx.controls',
      '--add-exports=javafx.controls/com.sun.javafx.scene.control=org.controlsfx.controls',
      '--add-exports=javafx.base/com.sun.javafx.event=org.controlsfx.controls',
      '--add-exports=javafx.base/com.sun.javafx.collections=org.controlsfx.controls',
      '--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=org.controlsfx.controls',
      '--add-exports=javafx.base/com.sun.javafx.event=org.controlsfx.controls',
      '--add-opens=javafx.graphics/javafx.scene=org.controlsfx.controls',

      '--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED',
      '--add-opens javafx.controls/javafx.scene.control.skin=ALL-UNNAMED'
    ]
    
    attachConfig {
        version = "4.0.12"
        services 'display', 'lifecycle', 'statusbar', 'storage'
    }
    //appIdentifier = "zzz" # no obvious effect
}

task renameNativeBuild (type: Sync) {
    from("${buildDir}/gluonfx/x86_64-windows/") {
      include 'pbalancer.exe'
      rename('pbalancer\\.exe', "pbalancer-${version}.exe")
    }
    into("${buildDir}/gluonfx/x86_64-windows/versioned-builds/")
    
    doLast {
        println "renameNativeBuild pbalancer-${version}.exe"
    }
}

//renameNativeBuild.dependsOn nativeBuild
nativeBuild.finalizedBy(renameNativeBuild)
